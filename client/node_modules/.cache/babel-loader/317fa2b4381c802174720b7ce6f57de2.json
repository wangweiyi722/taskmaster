{"ast":null,"code":"var _jsxFileName = \"/usr/local/google/home/weiyiwang/Desktop/taskmaster/client/src/components/Task.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchTask } from '../actions';\nimport { dbCaller } from '../apis/dbCaller';\n\nclass Task extends React.Component {\n  componentDidMount() {\n    this.props.fetchTask(this.props.taskId).catch(error => {\n      console.log(error);\n    });\n  }\n\n  render() {\n    console.log(this.props);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, \"Task:\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, this.props.id)), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \"Description:\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, this.props.description)), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"Completed:\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, this.props.completed ? \"yes\" : \"no\")))), React.createElement(\"button\", {\n      onClick: markComplete(this.props).catch(error => {\n        console.log(error);\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, this.props.completed ? \"Mark Incomplete\" : \"Mark Complete\"));\n  }\n\n}\n\nconst markComplete = props => async dispatch => {\n  const response = await dbCaller.put(\"/tasks/\".concat(props.id), {\n    \"description\": props.description,\n    \"deadline\": props.deadline,\n    \"assignee\": props.assignee,\n    \"completed\": true\n  });\n  dispatch({\n    type: 'MARK_COMPLETE',\n    payload: response.data\n  });\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  return state.tasks[ownProps.taskId];\n};\n\nexport default connect(mapStateToProps, {\n  fetchTask: fetchTask,\n  markComplete: markComplete\n})(Task);","map":{"version":3,"sources":["/usr/local/google/home/weiyiwang/Desktop/taskmaster/client/src/components/Task.js"],"names":["React","connect","fetchTask","dbCaller","Task","Component","componentDidMount","props","taskId","catch","error","console","log","render","id","description","completed","markComplete","dispatch","response","put","deadline","assignee","type","payload","data","mapStateToProps","state","ownProps","tasks"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,SAAR,QAAwB,YAAxB;AACA,SAAQC,QAAR,QAAuB,kBAAvB;;AAEA,MAAMC,IAAN,SAAmBJ,KAAK,CAACK,SAAzB,CAAmC;AAEjCC,EAAAA,iBAAiB,GAAE;AACjB,SAAKC,KAAL,CAAWL,SAAX,CAAqB,KAAKK,KAAL,CAAWC,MAAhC,EAAwCC,KAAxC,CAA8CC,KAAK,IAAE;AACnDC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KAFD;AAGD;;AAEDG,EAAAA,MAAM,GAAE;AACNF,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,KAAjB;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EACgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKA,KAAL,CAAWO,EAAhB,CADhB,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EACuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKP,KAAL,CAAWQ,WAAhB,CADvB,CAJF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EACqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKR,KAAL,CAAWS,SAAX,GAAqB,KAArB,GAA2B,IAAhC,CADrB,CAPF,CADF,CADF,EAcE;AAAQ,MAAA,OAAO,EAAEC,YAAY,CAAC,KAAKV,KAAN,CAAZ,CAAyBE,KAAzB,CAA+BC,KAAK,IAAE;AACnDC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,OAFc,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEO,KAAKH,KAAL,CAAWS,SAAX,GAAqB,iBAArB,GAAuC,eAF9C,CAdF,CADF;AAoBD;;AA9BgC;;AAiCnC,MAAMC,YAAY,GAAIV,KAAD,IAAW,MAAOW,QAAP,IAAoB;AAElD,QAAMC,QAAQ,GAAG,MAAMhB,QAAQ,CAACiB,GAAT,kBAAuBb,KAAK,CAACO,EAA7B,GAAkC;AAAC,mBAAcP,KAAK,CAACQ,WAArB;AAAiC,gBAAWR,KAAK,CAACc,QAAlD;AAA2D,gBAAWd,KAAK,CAACe,QAA5E;AAAqF,iBAAY;AAAjG,GAAlC,CAAvB;AACAJ,EAAAA,QAAQ,CAAE;AACRK,IAAAA,IAAI,EAAC,eADG;AAERC,IAAAA,OAAO,EAAEL,QAAQ,CAACM;AAFV,GAAF,CAAR;AAID,CAPD;;AASA,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAOC,QAAP,KAAoB;AAE1C,SAAOD,KAAK,CAACE,KAAN,CAAYD,QAAQ,CAACpB,MAArB,CAAP;AACD,CAHD;;AAKA,eAAeP,OAAO,CAACyB,eAAD,EAAiB;AAACxB,EAAAA,SAAS,EAACA,SAAX;AAAqBe,EAAAA,YAAY,EAACA;AAAlC,CAAjB,CAAP,CAAyEb,IAAzE,CAAf","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport {fetchTask} from '../actions';\nimport {dbCaller} from '../apis/dbCaller';\n\nclass Task extends React.Component {\n\n  componentDidMount(){\n    this.props.fetchTask(this.props.taskId).catch(error=>{\n      console.log(error);\n    });\n  }\n\n  render(){\n    console.log(this.props);\n    return (\n      <div>\n        <table>\n          <tbody>\n            <tr>\n              <td>Task:</td><td>{this.props.id}</td>\n            </tr>\n            <tr>\n              <td>Description:</td><td>{this.props.description}</td>\n            </tr>\n            <tr>\n              <td>Completed:</td><td>{this.props.completed?\"yes\":\"no\"}</td>\n            </tr>\n          </tbody>\n        </table>\n        <button onClick={markComplete(this.props).catch(error=>{\n            console.log(error);\n          })}>{this.props.completed?\"Mark Incomplete\":\"Mark Complete\"}</button>\n      </div>\n    );\n  }\n}\n\nconst markComplete = (props) => async (dispatch) => {\n\n  const response = await dbCaller.put(`/tasks/${props.id}`,{\"description\":props.description,\"deadline\":props.deadline,\"assignee\":props.assignee,\"completed\":true});\n  dispatch ({\n    type:'MARK_COMPLETE',\n    payload: response.data\n  });\n};\n\nconst mapStateToProps = (state,ownProps) => {\n\n  return state.tasks[ownProps.taskId];\n}\n\nexport default connect(mapStateToProps,{fetchTask:fetchTask,markComplete:markComplete})(Task);\n"]},"metadata":{},"sourceType":"module"}